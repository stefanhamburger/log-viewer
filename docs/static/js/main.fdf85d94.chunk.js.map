{"version":3,"sources":["groupSimilarEntries.ts","jsonLoader.ts","components/Filter.tsx","components/Table.tsx","components/App.tsx","render.tsx","state.ts","index.tsx"],"names":["groupSimilarEntries","entries","length","curEntry","entry1","entry2","entriesCopy","slice","list","previousEntry","shift","level","facility","timeStamp","message","concat","push","map","entry","undefined","Date","rawEntryToEntry","getJson","_getJson","apply","this","arguments","_callee","fileContents","json","regenerator_default","a","wrap","_context","prev","next","fetch","sent","abrupt","data","stop","controlStyles","root","margin","maxWidth","dropdownStyles","dropdown","minWidth","getDropdownOptions","obj","Object","keys","name","key","text","getSelectedOptions","filter","_ref","slicedToArray","_ref3","Filter","_ref5","state","react_default","createElement","style","display","flexWrap","TextField","label","onChange","event","setFilter","styles","Dropdown","multiSelect","options","levels","selectedKeys","item","Boolean","selected","facilities","Toggle","onText","offText","checked","relativeTime","Table","logEntries","columns","onRender","isFiltered","values","reduce","out","cur","isMultiline","whiteSpace","title","toUTCString","moment","fromNow","DetailsList","items","compact","selectionMode","SelectionMode","none","getKey","index","String","setKey","isHeaderVisible","App","numLogEntries","Text","variant","totalEntries","block","Fragment","marginBottom","render","filterByName","ReactDOM","Customizer","FluentCustomizations","document","getElementById","mergeStyles","selectors",":global(body), :global(html), :global(#root)","padding","height","words","trim","toLowerCase","split","word","sort","b","accumulator","includes","removeDuplicates","array","indexOf","createFilterObject","callback","asyncToGenerator","mark","initializeIcons","_ref2"],"mappings":"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","file":"static/js/main.fdf85d94.chunk.js","sourcesContent":["import LogEntry from \"./interfaces/LogEntry\";\nimport RawLogEntry from \"./interfaces/RawLogEntry\";\n\nfunction isSimilar(entry1: RawLogEntry, entry2: RawLogEntry): boolean {\n  return entry1.level === entry2.level && entry1.facility === entry2.facility && entry1.timeStamp === entry2.timeStamp;\n}\n\nfunction rawEntryToEntry(entry: RawLogEntry): LogEntry {\n  return {\n    level: entry.level,\n    message: entry.message,\n    facility: entry.facility,\n    timeStamp: entry.timeStamp === undefined ? undefined : new Date(entry.timeStamp),\n  };\n}\n\nexport default function groupSimilarEntries(entries: RawLogEntry[]): LogEntry[] {\n  if (entries.length === 0) {\n    return [];\n  }\n\n  const entriesCopy = entries.slice(0);\n\n  const list: RawLogEntry[] = [];\n  let previousEntry = entriesCopy.shift() as RawLogEntry;\n  let curEntry: RawLogEntry | undefined;\n\n  // eslint-disable-next-line no-cond-assign\n  while (curEntry = entriesCopy.shift()) {\n    if (isSimilar(previousEntry, curEntry)) {\n      previousEntry.message += `\\n${curEntry.message}`;\n    } else {\n      list.push(previousEntry);\n      previousEntry = curEntry;\n    }\n  }\n\n  list.push(previousEntry);\n\n  return list.map(entry => rawEntryToEntry(entry));\n}\n","import LogEntry from \"./interfaces/LogEntry\";\nimport RawLogEntry from \"./interfaces/RawLogEntry\";\nimport groupSimilarEntries from \"./groupSimilarEntries\";\n\n/** Reads the log entries from \"errors.json\", groups sequential entries into a `LogEntry` and returns it. */\nexport default async function getJson(): Promise<LogEntry[]> {\n  const fileContents = await fetch(\"./errors.json\");\n  const json = await fileContents.json() as { data: RawLogEntry[] };\n\n  return groupSimilarEntries(json.data);\n}\n","import React from \"react\";\nimport { Dropdown, IDropdownOption, TextField, Toggle } from \"office-ui-fabric-react\";\nimport State from '../interfaces/State';\nimport { setFilter } from '../state';\n\nconst controlStyles = {\n  root: {\n    margin: \"0 30px 20px 0\",\n    maxWidth: \"300px\",\n  }\n};\nconst dropdownStyles = {\n  root: {\n    margin: \"0 30px 20px 0\",\n    maxWidth: \"300px\",\n  },\n  dropdown: {\n    minWidth: \"200px\",\n  },\n};\n\nfunction getDropdownOptions(obj: { [key: string]: boolean }): IDropdownOption[] {\n  return Object.keys(obj).map(name => ({ key: name, text: name }));\n}\nfunction getSelectedOptions(obj: { [key: string]: boolean }): string[] {\n  return Object.entries(obj).filter(([, selected]) => selected).map(([key]) => key);\n}\n\nexport default function Filter({ state }: { state: State }): JSX.Element {\n  return (<div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n    <TextField\n      label=\"Filter by message:\"\n      onChange={(event, text) => setFilter(function(filter) { filter.message = text === undefined ? \"\" : text; })}\n      styles={controlStyles}\n    />\n    <Dropdown\n      label=\"Level:\"\n      multiSelect\n      options={getDropdownOptions(state.filter.levels)}\n      selectedKeys={getSelectedOptions(state.filter.levels)}\n      onChange={(event, item) => item && setFilter(function(filter) { filter.levels[item.key] = Boolean(item.selected); })}\n      styles={dropdownStyles}\n    />\n    <Dropdown\n      label=\"Facility:\"\n      multiSelect\n      options={getDropdownOptions(state.filter.facilities)}\n      selectedKeys={getSelectedOptions(state.filter.facilities)}\n      onChange={(event, item) => item && setFilter(function(filter) { filter.facilities[item.key] = Boolean(item.selected); })}\n      styles={dropdownStyles}\n    />\n    <Toggle\n      label=\"Time display\"\n      onText=\"Relative\"\n      offText=\"Absolute\"\n      checked={state.filter.relativeTime}\n      onChange={(event, checked) => setFilter(function(filter) { filter.relativeTime = Boolean(checked); })}\n      styles={controlStyles}\n    />\n  </div>);\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport { DetailsList, IColumn, SelectionMode } from \"office-ui-fabric-react\";\nimport LogEntry from \"../interfaces/LogEntry\";\nimport State from \"../interfaces/State\";\n\nexport default function Table({ logEntries, filter }: { logEntries: LogEntry[]; filter: State[\"filter\"] }): JSX.Element {\n  const columns: IColumn[] = [\n    {\n      key: \"level\",\n      name: \"Level\",\n      minWidth: 60,\n      maxWidth: 60,\n      onRender: (item: LogEntry) => item.level,\n      isFiltered: Object.values(filter.levels).reduce((out, cur) => out || !cur, false),\n    },\n    {\n      key: \"message\",\n      name: \"Message\",\n      minWidth: 100,\n      isMultiline: true,\n      onRender: (item: LogEntry) => <span style={{ whiteSpace: \"pre-wrap\" }}>{item.message}</span>,\n      isFiltered: filter.message !== \"\",\n    },\n    {\n      key: \"facility\",\n      name: \"Facility\",\n      minWidth: 100,\n      onRender: (item: LogEntry) => item.facility,\n      isFiltered: Object.values(filter.facilities).reduce((out, cur) => out || !cur, false),\n    },\n    {\n      key: \"timeStamp\",\n      name: \"Timestamp\",\n      minWidth: filter.relativeTime ? 120 : 200,\n      onRender: (item: LogEntry) => (\n        filter.relativeTime\n          ? (<span title={item.timeStamp && item.timeStamp.toUTCString()}>\n              {moment(item.timeStamp).fromNow()}\n            </span>)\n          : item.timeStamp && (<span title={moment(item.timeStamp).fromNow()}>\n            {item.timeStamp.toUTCString()}\n          </span>)\n      ),\n    },\n  ];\n\n  return (<DetailsList\n    items={logEntries}\n    columns={columns}\n    compact={true}\n    selectionMode={SelectionMode.none}\n    getKey={(item, index) => String(index)}\n    setKey={String(logEntries.length)}\n    isHeaderVisible={true}\n  />);\n}\n","import React from \"react\";\nimport { Text } from \"office-ui-fabric-react\";\nimport Filter from \"./Filter\";\nimport State from \"../interfaces/State\";\nimport Table from \"./Table\";\n\nexport default function App({ state }: { state: State }): JSX.Element {\n  const numLogEntries = state.logEntries.length;\n\n  return (<div style={{ margin: \"1em 1.5em\" }}>\n    <h1><Text variant=\"xxLarge\">Log viewer</Text></h1>\n    {state.totalEntries === 0\n      ? <Text block={true}>No log entries found.</Text>\n      : (<>\n        <Text block={true} styles={{ root: { marginBottom: \"1em\" } }}>\n          Found {state.totalEntries} log entries\n          {numLogEntries < state.totalEntries && `, and showing ${numLogEntries} filtered entries`}\n          .\n        </Text>\n        <Filter state={state} />\n        <Table logEntries={state.logEntries} filter={state.filter} />\n      </>)}\n  </div>);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { FluentCustomizations } from '@uifabric/fluent-theme';\nimport { Customizer, mergeStyles } from 'office-ui-fabric-react';\nimport { getState } from './state';\n\n// Inject some global styles\nmergeStyles({\n  selectors: {\n    ':global(body), :global(html), :global(#root)': {\n      margin: 0,\n      padding: 0,\n      height: '100vh'\n    }\n  }\n});\n\nexport default function render(): void {\n  const state = getState();\n\n  ReactDOM.render(\n    <Customizer {...FluentCustomizations}>\n      <App state={state} />\n    </Customizer>,\n    document.getElementById('root')\n  );\n}\n","import LogEntry from \"./interfaces/LogEntry\";\nimport State from \"./interfaces/State\";\nimport render from './render';\n\nlet logEntries: State[\"logEntries\"] = [];\n\nconst filter: State[\"filter\"] = {\n  message: \"\",\n  levels: {},\n  facilities: {},\n  relativeTime: true,\n};\n\nfunction filterByName(entry: LogEntry): boolean {\n  const words = filter.message.trim().toLowerCase().split(\" \").filter(word => word !== \"\");\n  words.sort((a, b) => b.length - a.length);\n\n  const message = entry.message === undefined ? \"\" : entry.message.toLowerCase();\n  return words.reduce((accumulator: boolean, word) => accumulator && message.includes(word), true);\n}\n\n/** Returns the currently stored log entries and filter preferences. */\nexport function getState(): State {\n  const filteredEntries = logEntries\n    .filter(filterByName)\n    .filter(entry => entry.level !== undefined && filter.levels[entry.level])\n    .filter(entry => entry.facility !== undefined && filter.facilities[entry.facility]);\n\n  return {\n    logEntries: filteredEntries,\n    totalEntries: logEntries.length,\n    filter,\n  };\n}\n\nfunction removeDuplicates(entry: string | undefined, index: number, array: (string | undefined)[]): boolean {\n  return entry !== undefined && array.indexOf(entry) === index;\n}\nfunction createFilterObject(callback: (entry: LogEntry) => string | undefined): { [key: string]: boolean } {\n  return logEntries\n    .map(callback)\n    .filter(removeDuplicates)\n    .reduce((obj, key) => { obj[key as string] = true; return obj; }, {} as { [key: string]: boolean });\n}\n\n/** Stores the given log entries in the state, and updates the UI. */\nexport function setEntries(newEntries: LogEntry[]): void {\n  logEntries = newEntries;\n  filter.levels = createFilterObject(({ level }) => level);\n  filter.facilities = createFilterObject(({ facility }) => facility);\n  render();\n}\n\n/** Calls the given callback function with the current filter, and redraws the UI based on the updated filter. */\nexport function setFilter(callback: (filter: State[\"filter\"]) => void): void {\n  callback(filter);\n  render();\n}\n","import getJson from './jsonLoader';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport { setEntries } from './state';\n\n(async function() {\n  initializeIcons();\n  const logEntries = await getJson();\n  setEntries(logEntries);\n}());\n"],"sourceRoot":""}